
원도우에서 docker를 이용한 tensorflow ...

1. docker-machine ls

2. docker-machine create vdocker -d virtualbox

3. docker-machine ls ( docker-machine 에서 vdocker 생성확인 )

4. docker-machine ssh vdocker 로 접속 
- vdocker에 접속 확인
- exit로 나옵니다.

5. docker-machine restart vdocker

6. 윈도우 도스창에서  FOR /f "tokens=*" %i IN ('docker-machine env --shell cmd vdocker') DO %i 실행 

7. 다시 docker창에서  docker run -it -p 8888:8888 b.gcr.io/tensorflow/tensorflow 실행 docker의 8888 port를 연결

8. 윈도우에서 브라우저를 열고 http://192.168.99.100:8888 ( 192.168.99.100 docker의 주소, 8888 port )


만약 docker 이미지에 라이브러리 추가하려면

1. docker images - 현재 이미지 조회 이미지가 없으면 다운 받습니다.

2. docker run -i -t --name (이미지명) /bin/bash ( 이미지를 bash shell로 열어줍니다. 우분투 이미지일 경우)

3. 라이브러리를 설치 합니다. (우분투 이미지일 경우)

   sudo pip install python-pip python-dev 
   sudo apt-get install git-core
   sudo pip install ipython jupyter
   ... 등등 그리고 exit
      
4. 그리고 변경(설치)된 이미지는 반드시!! commit을 해줍니다.

- docker commit [options] [container_name] [repository[:tag]]

ex) docker commit -m "add vim" -a "mega@aaaaa.com" ubuntu-mega truelsy/ubuntu-mega:vim
    "ubuntu-mega"라는 이름의 Container에 변경사항을 반영하고(vim 설치) 이미지 이름을 저장소 이름은 "truelsy/ubuntu-mega:vim"으로 지정
    -m : 로그 메세지 -a : 커밋한 사용자
    
    
5. 다시 이미지를 실행합니다. 
   
   docker run -it -p 8888:8888 (이미지명) 
   
   그리고... jupyter notebook 실행
   
   윈도우에서 브라우저를 열고 http://192.168.99.100:8888 ( 192.168.99.100 docker의 주소, 8888 port )
   
   그럼 jupyter로 python을 실행 가능